{"version":3,"sources":["custom.js","jquery.fluidbox.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["//\n// custom.js\n// --------------------------------------------------------\n$(document).ready(function()\n{\n    $('[data-fluidbox]').fluidbox();\n});","// Fluidbox\n// Description: Replicating the seamless lightbox transition effect seen on Medium.com, with some improvements\n// Version: 1.4.4\n// Author: Terry Mun\n// Author URI: http://terrymun.com\n\n// -------------------------------------------------------- //\n//  Dependency: Paul Irish's jQuery debounced resize event  //\n// -------------------------------------------------------- //\n(function($,sr){\n\n\t// debouncing function from John Hann\n\t// http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/\n\tvar debounce = function (func, threshold, execAsap) {\n\t\tvar timeout;\n\n\t\treturn function debounced () {\n\t\t\tvar obj = this, args = arguments;\n\t\t\tfunction delayed () {\n\t\t\t\tif (!execAsap)\n\t\t\t\tfunc.apply(obj, args);\n\t\t\t\ttimeout = null;\n\t\t\t};\n\n\t\t\tif (timeout)\n\t\t\t\tclearTimeout(timeout);\n\t\t\telse if (execAsap)\n\t\t\t\tfunc.apply(obj, args);\n\n\t\t\ttimeout = setTimeout(delayed, threshold || 100);\n\t\t};\n\t}\n\t// smartresize\n\tjQuery.fn[sr] = function(fn){  return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };\n\n})(jQuery,'smartresize');\n\n\n// ---------------------------------------------------------------------------------------------------------------------- //\n//  Dependency: David Walsh (http://davidwalsh.name/css-animation-callback)                                               //\n//              and                                                                                                       //\n//              Jonathan Suh (https://jonsuh.com/blog/detect-the-end-of-css-animations-and-transitions-with-javascript/)  //\n// ---------------------------------------------------------------------------------------------------------------------- //\nfunction whichTransitionEvent() {\n\tvar t,\n\t\tel = document.createElement(\"fakeelement\");\n\n\tvar transitions = {\n\t\t\"transition\"      : \"transitionend\",\n\t\t\"OTransition\"     : \"oTransitionEnd\",\n\t\t\"MozTransition\"   : \"transitionend\",\n\t\t\"WebkitTransition\": \"webkitTransitionEnd\"\n\t}\n\n\tfor (t in transitions){\n\t\tif (el.style[t] !== undefined){\n\t\t\treturn transitions[t];\n\t\t}\n\t}\n}\nvar customTransitionEnd = whichTransitionEvent();\n\n// -----------------------------\n//  Fluidbox plugin starts here\n// -----------------------------\n(function ($) {\n\n\tvar fbCount = 0;\n\n\t$.fn.fluidbox = function (opts) {\n\n\t\t// Default settings\n\t\tvar settings = $.extend(true, {\n\t\t\tviewportFill: 0.95,\n\t\t\tdebounceResize: true,\n\t\t\tstackIndex: 1000,\n\t\t\tstackIndexDelta: 10,\n\t\t\tcloseTrigger: [\n\t\t\t\t{\n\t\t\t\t\tselector: '.fluidbox-overlay',\n\t\t\t\t\tevent: 'click'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: 'document',\n\t\t\t\t\tevent: 'keyup',\n\t\t\t\t\tkeyCode: 27\n\t\t\t\t}\n\t\t\t],\n\t\t\timmediateOpen: false,\n\t\t\tloadingEle: true\n\t\t}, opts);\n\n\t\t// Keyboard events\n\t\tvar keyboardEvents = [\n\t\t\t'keyup',\n\t\t\t'keydown',\n\t\t\t'keypress'\n\t\t];\n\n\t\t// Ensure that the stackIndex does not become negative\n\t\tif(settings.stackIndex < settings.stackIndexDelta) settings.stackIndexDelta = settings.stackIndex;\n\n\t\t// Dynamically create overlay\n\t\t$fbOverlay = $('<div />', {\n\t\t\t'class': 'fluidbox-overlay',\n\t\t\tcss: {\n\t\t\t\t'z-index': settings.stackIndex\n\t\t\t}\n\t\t});\n\n\t\t// Declare variables\n\t\tvar $fb = this,\n\t\t\t$w = $(window),\t\t// Shorthand for $(window)\n\t\t\tvpRatio,\n\n\t\t\t// Function:\n\t\t\t// 1. funcCloseFb()\t\t- used for closing instances of opened Fluidbox\n\t\t\t// 2. funcPositionFb()\t- used for dynamic positioning of any instance of opened Fluidbox\n\t\t\t// 3. funcCalcAll()\t\t- used to run funcCalc() for every instance of targered Fluidbox thumbnail\n\t\t\t// 5. fbClickhandler()\t- universal click handler for all Fluidbox items\n\t\t\tfuncCloseFb = function (selector) {\n\t\t\t\t$(selector + '.fluidbox-opened').trigger('click');\n\t\t\t},\n\t\t\tfuncPositionFb = function ($activeFb, customEvents) {\n\t\t\t\t// Get shorthand for more objects\n\t\t\t\tvar $img    = $activeFb.find('img').first(),\n\t\t\t\t\t$ghost  = $activeFb.find('.fluidbox-ghost'),\n\t\t\t\t\t$loader = $activeFb.find('.fluidbox-loader'),\n\t\t\t\t\t$wrap\t= $activeFb.find('.fluidbox-wrap'),\n\t\t\t\t\t$data\t= $activeFb.data(),\n\t\t\t\t\tfHeight = 0,\n\t\t\t\t\tfWidth\t= 0;\n\n\t\t\t\t// Calculate aspect ratio\t\t\t\t\n\t\t\t\t$img.data().imgRatio = $data.natWidth/$data.natHeight;\n\n\t\t\t\t// Check natural dimensions\n\t\t\t\tif(vpRatio > $img.data().imgRatio) {\n\n\t\t\t\t\t// Check if linked image is smaller or larger than intended fill\n\t\t\t\t\tif($data.natHeight < $w.height()*settings.viewportFill) {\n\t\t\t\t\t\t// If shorter, preserve smaller height\n\t\t\t\t\t\tfHeight = $data.natHeight;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfHeight = $w.height()*settings.viewportFill;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Calculate how much to scale along the y-axis\n\t\t\t\t\t$data.imgScale = fHeight/$img.height();\n\t\t\t\t\t$data.imgScaleY = $data.imgScale;\n\n\t\t\t\t\t// Calcualte how much to scale along the x-axis\n\t\t\t\t\t$data.imgScaleX = $data.natWidth*(($img.height()*$data.imgScaleY)/$data.natHeight)/$img.width();\n\n\t\t\t\t} else {\n\t\t\t\t\t// Check if linked image is smaller or larger than intended fill\n\t\t\t\t\tif($data.natWidth < $w.width()*settings.viewportFill) {\n\t\t\t\t\t\t// If narrower, preserve smaller width\n\t\t\t\t\t\tfWidth = $data.natWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfWidth = $w.width()*settings.viewportFill;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Calculate how much to scale along the x-axis\n\t\t\t\t\t$data.imgScale = fWidth/$img.width();                                      \n\t\t\t\t\t$data.imgScaleX = $data.imgScale;\n\n\t\t\t\t\t// Calculate how much to scale along the y-axis\n\t\t\t\t\t$data.imgScaleY = $data.natHeight*(($img.width()*$data.imgScaleX)/$data.natWidth)/$img.height();\n\t\t\t\t}\t\n\n\t\t\t\t// Magic happens right here... okay, not really. Just really fizzy calculations\n\t\t\t\tvar offsetY = $w.scrollTop()-$img.offset().top+0.5*($img.data('imgHeight')*($img.data('imgScale')-1))+0.5*($w.height()-$img.data('imgHeight')*$img.data('imgScale')),\n\t\t\t\t\toffsetX = 0.5*($img.data('imgWidth')*($img.data('imgScale')-1))+0.5*($w.width()-$img.data('imgWidth')*$img.data('imgScale'))-$img.offset().left,\n\t\t\t\t\tscale = parseInt($data.imgScaleX * 1000) / 1000 + ',' + parseInt($data.imgScaleY * 1000) / 1000;\n\n\t\t\t\t// Apply CSS transforms to ghost element\n\t\t\t\t// For offsetX and Y:\tround to one decimal place\n\t\t\t\t// For scale: \t\t\tround to three decimal places\n\t\t\t\t$ghost\n\t\t\t\t.add($loader)\n\t\t\t\t.css({\n\t\t\t\t\t'transform': 'translate('+parseInt(offsetX*10)/10+'px,'+parseInt(offsetY*10)/10+'px) scale('+ scale +')',\n\t\t\t\t\ttop: $img.offset().top - $wrap.offset().top,\n\t\t\t\t\tleft: $img.offset().left - $wrap.offset().left\n\t\t\t\t});\n\t\t\t\t$ghost.one(customTransitionEnd, function() {\n\t\t\t\t\t$.each(customEvents, function(i,customEvent) {\n\t\t\t\t\t\t$activeFb.trigger(customEvent);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tfuncCalc = function ($fbItem) {\n\t\t\t\t// Get viewport ratio\n\t\t\t\tvpRatio = $w.width() / $w.height();\n\n\t\t\t\t// Get image dimensions and aspect ratio\n\t\t\t\tif($fbItem.hasClass('fluidbox')) {\n\t\t\t\t\tvar $img\t= $fbItem.find('img').first(),\n\t\t\t\t\t\t$ghost\t= $fbItem.find('.fluidbox-ghost'),\n\t\t\t\t\t\t$loader = $fbItem.find('.fluidbox-loader'),\n\t\t\t\t\t\t$wrap\t= $fbItem.find('.fluidbox-wrap'),\n\t\t\t\t\t\tdata\t= $img.data();\n\n\t\t\t\t\tfunction imageProp() {\n\t\t\t\t\t\t// Store image dimensions in jQuery object\n\t\t\t\t\t\tdata.imgWidth\t= $img.width();\n\t\t\t\t\t\tdata.imgHeight\t= $img.height();\n\t\t\t\t\t\tdata.imgRatio\t= $img.width()/$img.height();\n\n\t\t\t\t\t\t// Resize and position ghost element\n\t\t\t\t\t\t$ghost\n\t\t\t\t\t\t.add($loader)\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\twidth: $img.width(),\n\t\t\t\t\t\t\theight: $img.height(),\n\t\t\t\t\t\t\ttop: $img.offset().top - $wrap.offset().top + parseInt($img.css('borderTopWidth')) + parseInt($img.css('paddingTop')),\n\t\t\t\t\t\t\tleft: $img.offset().left - $wrap.offset().left + parseInt($img.css('borderLeftWidth')) + parseInt($img.css('paddingLeft'))\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Calculate scale based on orientation\n\t\t\t\t\t\tif(vpRatio > data.imgRatio) {\n\t\t\t\t\t\t\tdata.imgScale = $w.height()*settings.viewportFill/$img.height();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata.imgScale = $w.width()*settings.viewportFill/$img.width();\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t\timageProp();\t\t\t\t\t\n\n\t\t\t\t\t// Rerun everything on imageload, to overcome issue in Firefox\n\t\t\t\t\t$img.load(imageProp);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfbClickHandler = function(e) {\n\n\t\t\t\t// Check if the fluidbox element does have .fluidbox assigned to it\n\t\t\t\tif($(this).hasClass('fluidbox')) {\n\n\t\t\t\t\t// Variables\n\t\t\t\t\tvar $activeFb\t= $(this),\n\t\t\t\t\t\t$img\t\t= $(this).find('img').first(),\n\t\t\t\t\t\t$ghost\t\t= $(this).find('.fluidbox-ghost'),\n\t\t\t\t\t\t$loader\t\t= $(this).find('.fluidbox-loader'),\n\t\t\t\t\t\t$wrap   \t= $(this).find('.fluidbox-wrap'),\n\t\t\t\t\t\tlinkedImg   = encodeURI($activeFb.attr('href')),\n\t\t\t\t\t\ttimer   \t= {};\n\n\t\t\t\t\t// Functions\n\t\t\t\t\t// 1. fbOpen(): called when Fluidbox receives a click event and is ready to open\n\t\t\t\t\t// 2. fbClose(): called when Fluidbox receives a click event and is ready to close\n\t\t\t\t\tvar fbOpen = function() {\n\t\t\t\t\t\t\t// Fire custom event: openstart\n\t\t\t\t\t\t\t$activeFb.trigger('openstart');\n\n\t\t\t\t\t\t\t// What are we doing here:\n\t\t\t\t\t\t\t// 1. Append overlay in fluidbox\n\t\t\t\t\t\t\t// 2. Toggle fluidbox state with data attribute\n\t\t\t\t\t\t\t// 3. Store original z-index with data attribute (so users can change z-index when they see fit in CSS file)\n\t\t\t\t\t\t\t// 4. Class toggle\n\t\t\t\t\t\t\t$activeFb\n\t\t\t\t\t\t\t.append($fbOverlay)\n\t\t\t\t\t\t\t.data('fluidbox-state', 1)\n\t\t\t\t\t\t\t.removeClass('fluidbox-closed')\n\t\t\t\t\t\t\t.addClass('fluidbox-opened');\n\n\t\t\t\t\t\t\t// Force timer to completion\n\t\t\t\t\t\t\tif(timer['close']) window.clearTimeout(timer['close']);\n\n\t\t\t\t\t\t\t// Set timer for opening\n\t\t\t\t\t\t\ttimer['open'] = window.setTimeout(function() {\n\t\t\t\t\t\t\t\t// Show overlay\n\t\t\t\t\t\t\t\t$('.fluidbox-overlay').css({ opacity: 1 });\n\t\t\t\t\t\t\t}, 10);\n\n\t\t\t\t\t\t\t// Change wrapper z-index, so it is above everything else\n\t\t\t\t\t\t\t// Decrease all siblings z-index by 1 just in case\n\t\t\t\t\t\t\t$('.fluidbox-wrap').css({ zIndex: settings.stackIndex - settings.stackIndexDelta - 1 });\n\t\t\t\t\t\t\t$wrap.css({ 'z-index': settings.stackIndex + settings.stackIndexDelta });\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfbClose = function() {\n\t\t\t\t\t\t\t// Fire custom event: closestart\n\t\t\t\t\t\t\t$activeFb.trigger('closestart');\n\n\t\t\t\t\t\t\t// Switch state\n\t\t\t\t\t\t\t$activeFb\n\t\t\t\t\t\t\t.data('fluidbox-state', 0)\n\t\t\t\t\t\t\t.removeClass('fluidbox-opened fluidbox-loaded fluidbox-loading')\n\t\t\t\t\t\t\t.addClass('fluidbox-closed');\n\n\t\t\t\t\t\t\t// Set timer for closing\n\t\t\t\t\t\t\tif(timer['open']) window.clearTimeout(timer['open']);\n\t\t\t\t\t\t\ttimer['close'] = window.setTimeout(function() {\n\t\t\t\t\t\t\t\t$('.fluidbox-overlay').remove();\n\t\t\t\t\t\t\t\t$wrap.css({ 'z-index': settings.stackIndex - settings.stackIndexDelta });\n\t\t\t\t\t\t\t}, 10);\n\n\t\t\t\t\t\t\t// Hide overlay\n\t\t\t\t\t\t\t$('.fluidbox-overlay').css({ opacity: 0 });\n\n\t\t\t\t\t\t\t// Reverse animation on wrapped elements, and restore stacking order\n\t\t\t\t\t\t\t// You might want to change this value if your transition timing is longer\n\t\t\t\t\t\t\t$ghost\n\t\t\t\t\t\t\t.add($loader)\n\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\t'transform': 'translate(0,0) scale(1,1)',\n\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\ttop: $img.offset().top - $wrap.offset().top + parseInt($img.css('borderTopWidth')) + parseInt($img.css('paddingTop')),\n\t\t\t\t\t\t\t\tleft: $img.offset().left - $wrap.offset().left + parseInt($img.css('borderLeftWidth')) + parseInt($img.css('paddingLeft'))\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$ghost.one(customTransitionEnd, function() {\n\t\t\t\t\t\t\t\t$activeFb.trigger('closeend');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$img.css({ opacity: 1 });\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif($(this).data('fluidbox-state') === 0 || !$(this).data('fluidbox-state')) {\n\t\t\t\t\t\t// State: Closed\n\t\t\t\t\t\t// Action: Open fluidbox\n\n\t\t\t\t\t\t// Add class to indicate larger image is being loaded\n\t\t\t\t\t\t$activeFb.addClass('fluidbox-loading');\n\n\t\t\t\t\t\t// Set thumbnail image source as background image first, preload later\n\t\t\t\t\t\t$img.css({ opacity: 0 });\n\t\t\t\t\t\t$ghost.css({\n\t\t\t\t\t\t\t'background-image': 'url('+$img.attr('src')+')',\n\t\t\t\t\t\t\topacity: 1\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check if item should be opened immediately\n\t\t\t\t\t\tif(settings.immediateOpen) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Store natural width and height of thumbnail\n\t\t\t\t\t\t\t// We use this to scale preliminarily\n\t\t\t\t\t\t\t$activeFb\n\t\t\t\t\t\t\t.data('natWidth', $img[0].naturalWidth)\n\t\t\t\t\t\t\t.data('natHeight', $img[0].naturalHeight);\n\n\t\t\t\t\t\t\t// Open immediately\n\t\t\t\t\t\t\tfbOpen();\n\n\t\t\t\t\t\t\t// Preliminary positioning of Fluidbox based on available image ratio\n\t\t\t\t\t\t\tfuncPositionFb($activeFb, ['openend']);\n\n\t\t\t\t\t\t\t// Preload target image\n\t\t\t\t\t\t\t$('<img />', {\n\t\t\t\t\t\t\t\tsrc: linkedImg\n\t\t\t\t\t\t\t}).load(function() {\n\t\t\t\t\t\t\t\t// When loading is successful\n\t\t\t\t\t\t\t\t// 1. Trigger custom event: imageloaddone\n\t\t\t\t\t\t\t\t// 2. Remove loading class\n\t\t\t\t\t\t\t\t// 3. Add loaded class\n\t\t\t\t\t\t\t\t// 4. Store natural width and height\n\t\t\t\t\t\t\t\t$activeFb\n\t\t\t\t\t\t\t\t.trigger('imageloaddone').trigger('delayedloaddone')\n\t\t\t\t\t\t\t\t.removeClass('fluidbox-loading')\n\t\t\t\t\t\t\t\t.addClass('fluidbox-loaded')\n\t\t\t\t\t\t\t\t.data('natWidth', $(this)[0].naturalWidth)\n\t\t\t\t\t\t\t\t.data('natHeight', $(this)[0].naturalHeight);\n\n\t\t\t\t\t\t\t\t// Show linked image\n\t\t\t\t\t\t\t\t$ghost.css({\n\t\t\t\t\t\t\t\t\t'background-image': 'url('+linkedImg+')'});\n\n\t\t\t\t\t\t\t\t// Reposition Fluidbox\n\t\t\t\t\t\t\t\tfuncPositionFb($activeFb, ['delayedreposdone']);\n\n\t\t\t\t\t\t\t}).error(function() {\n\t\t\t\t\t\t\t\t// If image fails to load, close Fluidbox\n\t\t\t\t\t\t\t\t// Trigger custom event: imageloadfail\n\t\t\t\t\t\t\t\t$activeFb.trigger('imageloadfail');\n\t\t\t\t\t\t\t\tfbClose();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If wait for ghost image to preload\n\t\t\t\t\t\t\t// Preload ghost image\n\t\t\t\t\t\t\t$('<img />', {\n\t\t\t\t\t\t\t\tsrc: linkedImg\n\t\t\t\t\t\t\t}).load(function() {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// When loading is successful\n\t\t\t\t\t\t\t\t// 1. Trigger custom event: imageloaddone\n\t\t\t\t\t\t\t\t// 2. Remove loading class\n\t\t\t\t\t\t\t\t// 3. Add loaded class\n\t\t\t\t\t\t\t\t// 4. Store natural width and height\n\t\t\t\t\t\t\t\t$activeFb\n\t\t\t\t\t\t\t\t.trigger('imageloaddone')\n\t\t\t\t\t\t\t\t.removeClass('fluidbox-loading')\n\t\t\t\t\t\t\t\t.addClass('fluidbox-loaded')\n\t\t\t\t\t\t\t\t.data('natWidth', $(this)[0].naturalWidth)\n\t\t\t\t\t\t\t\t.data('natHeight', $(this)[0].naturalHeight);\n\n\t\t\t\t\t\t\t\t// Since image is already loaded, we force it to open immediately next time\n\t\t\t\t\t\t\t\tsettings.immediateOpen = true;\n\n\t\t\t\t\t\t\t\t// Show linked image\n\t\t\t\t\t\t\t\t$ghost.css({ 'background-image': 'url('+linkedImg+')' });\n\n\t\t\t\t\t\t\t\t// Open Fluidbox\n\t\t\t\t\t\t\t\tfbOpen();\n\n\t\t\t\t\t\t\t\t// Position Fluidbox\n\t\t\t\t\t\t\t\tfuncPositionFb($activeFb, ['openend']);\n\n\t\t\t\t\t\t\t}).error(function() {\n\t\t\t\t\t\t\t\t// If image fails to load, close Fluidbox\n\t\t\t\t\t\t\t\t// Trigger custom event: imageloadfail\n\t\t\t\t\t\t\t\t$activeFb.trigger('imageloadfail');\n\t\t\t\t\t\t\t\tfbClose();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// State: Open\n\t\t\t\t\t\t// Action: Close fluidbox\n\t\t\t\t\t\tfbClose();\n\t\t\t\t\t}\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar funcResize = function (selectorChoice) {\n\t\t\t\t// Recalculate dimensions\n\t\t\t\tif(!selectorChoice) {\n\t\t\t\t\t// Recalcualte ALL Fluidbox instances (fired upon window resize)\n\t\t\t\t\t$fb.each(function () {\n\t\t\t\t\t\tfuncCalc($(this));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Recalcualte selected Fluidbox instances\n\t\t\t\t\tfuncCalc(selectorChoice);\n\t\t\t\t}\n\n\t\t\t\t// Reposition Fluidbox, but only if one is found to be open\n\t\t\t\tvar $activeFb = $('a.fluidbox.fluidbox-opened');\n\t\t\t\tif($activeFb.length > 0) funcPositionFb($activeFb, ['resizeend']);\n\t\t\t};\n\n\t\tif(settings.debounceResize) {\n\t\t\t$(window).smartresize(function() { funcResize(); });\n\t\t} else {\n\t\t\t$(window).resize(function() { funcResize(); });\n\t\t}\n\n\t\t// Go through each individual object\n\t\t$fb.each(function (i) {\n\t\t\t// Check if Fluidbox:\n\t\t\t// 1. Is an anchor element ,<a>\n\t\t\t// 2. Contains one and ONLY one child\n\t\t\t// 3. The only child is an image element, <img>\n\t\t\t// 4. If the element is hidden\n\t\t\tif($(this).is('a') && $(this).children().length === 1 && $(this).children().is('img') && $(this).css('display') !== 'none' && $(this).parents().css('display') !== 'none') {\n\n\t\t\t\t// Define wrap\n\t\t\t\tvar $fbInnerWrap = $('<div />', {\n\t\t\t\t\t'class': 'fluidbox-wrap',\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t'z-index': settings.stackIndex - settings.stackIndexDelta\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Define loader\n\t\t\t\tvar $fbLoader = $('<div />', {\n\t\t\t\t\t'class': 'fluidbox-loader'\n\t\t\t\t});\n\n\t\t\t\t// Update count for global Fluidbox instances\n\t\t\t\tfbCount+=1;\n\n\t\t\t\t// Add class\n\t\t\t\tvar $fbItem = $(this);\n\t\t\t\t$fbItem\n\t\t\t\t.addClass('fluidbox fluidbox-closed')\n\t\t\t\t.attr('id', 'fluidbox-'+fbCount)\n\t\t\t\t.wrapInner($fbInnerWrap)\n\t\t\t\t.find('img')\n\t\t\t\t\t.first()\n\t\t\t\t\t.css({ opacity: 1 })\n\t\t\t\t\t.after('<div class=\"fluidbox-ghost\" />')\n\t\t\t\t\t.each(function(){\n\t\t\t\t\t\tvar $img = $(this);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ($img.width() > 0 && $img.height() > 0) {\n\t\t\t\t\t\t\t// If image is already loaded (from cache)\n\t\t\t\t\t\t\tfuncCalc($fbItem);\n\t\t\t\t\t\t\t$fbItem.click(fbClickHandler);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Wait for image to load\n\t\t\t\t\t\t\t$img.load(function(){\n\t\t\t\t\t\t\t\tfuncCalc($fbItem);\n\t\t\t\t\t\t\t\t$fbItem.click(fbClickHandler);\n\n\t\t\t\t\t\t\t\t// Trigger custom event: thumbloaddone\n\t\t\t\t\t\t\t\t$fbItem.trigger('thumbloaddone');\n\t\t\t\t\t\t\t}).error(function() {\n\t\t\t\t\t\t\t\t// Trigger custom event: thumbloadfail\n\t\t\t\t\t\t\t\t$fbItem.trigger('thumbloadfail');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Check of loader is enabled\n\t\t\t\tif(settings.loadingEle) {\n\t\t\t\t\t$fbItem.find('.fluidbox-ghost').after($fbLoader);\n\t\t\t\t}\n\n\t\t\t\t// Custom trigger\n\t\t\t\t$(this).on('recompute', function() {\n\t\t\t\t\tfuncResize($(this));\n\t\t\t\t\t$(this).trigger('recomputeend');\n\t\t\t\t});\n\n\t\t\t\t// When should we close Fluidbox?\n\t\t\t\tvar selector = '#fluidbox-'+fbCount;\n\t\t\t\tif(settings.closeTrigger) {\n\t\t\t\t\t// Go through array\n\t\t\t\t\t$.each(settings.closeTrigger, function (i) {\n\t\t\t\t\t\tvar trigger = settings.closeTrigger[i];\n\n\t\t\t\t\t\t// Attach events\n\t\t\t\t\t\tif(trigger.selector != 'window') {\n\t\t\t\t\t\t\t// If it is not 'window', we append click handler to $(document) object, allow it to bubble up\n\t\t\t\t\t\t\t// However, if thes selector is 'document', we use a different .on() syntax\n\t\t\t\t\t\t\tif(trigger.selector == 'document') {\n\t\t\t\t\t\t\t\tif(trigger.keyCode && keyboardEvents.indexOf(trigger.event) > -1 ) {\n\t\t\t\t\t\t\t\t\t$(document).on(trigger.event, function (e) {\n\t\t\t\t\t\t\t\t\t\tif(e.keyCode == trigger.keyCode) funcCloseFb(selector);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$(document).on(trigger.event, selector, function() {\n\t\t\t\t\t\t\t\t\t\tfuncCloseFb(selector);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If it is 'window', append click handler to $(window) object\n\t\t\t\t\t\t\t$w.on(trigger.event, function() {\n\t\t\t\t\t\t\t\tfuncCloseFb(selector);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Return to allow chaining\n\t\treturn $fb;\n\t};\n\n})(jQuery);"],"sourceRoot":"/source/"}